void	ft_lstadd_back(t_list **alst, t_list *new)
		ajoute la new a la fin de la liste chainer commencant par alst

void	ft_lstadd_front(t_list **alst, t_list *new)
		ajoute new au debut de la liste chainer alst et fait pointer le debut de cette liste sur new

void	ft_lstclear(t_list **lst, void(*del)(void*))
		supprime pqr lq fonction del et free l'espace pointer par **lst et sa suite puis le met a NULL

void	ft_lstdelone(t_list *lst, void(*del)(void*))
		supprime par la fonction del et free la t_list lst

void	ft_lstiter(t_list *lst, void (*f)(void *))
		applique la fonction f sur tout les lst->content de chaque mayon de la liste chainer

t_list	*ft_lstlast(t_list *lst)
		retourne le dernier element de la list commencant par le pointeur *lst

t_list	*ft_lstmap(t_list *lst, void *(*f)(void *), void (*del)(void *))
		applique la fonction f a tout les lst->content de la liste et les stock dans une nouvelle list chainer, del est utiliser en cas d'echec d'allocation, retourne un pointeur sur le debut de la nouvelle liste

t_list	*ft_lstnew(void *content)
		allou et creer un t_list new dont new-> sera egale a content passer en parametres, retourne un pointeur sur cette t_list

int		ft_lstsize(t_list *lst)
		compte le nombre d'element de la lst, retourne le nomber d'elements de la lst
