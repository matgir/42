Information:
	-	IRC : Internet Relay Chat
	-	IRC server : may contain several channels, also containing several IRC
		clients, represented by a specific nickame in the server
	-	IRC networks : contains multiple server all sharing information about local
		events, they all have a copy of the same global state, it provides greater
		capacity
	-	IRC client connecting to IRC server : at its first connection a user must
		register, to do that it has to send to messages
			1st "NICK <nikcname>"
			2nd "USER <username> *<hostname> *<servername> <full_name>"
		the * parameter can be replaced by *, because current IRC server determine
		themselves those informations
	-	IRC protocol 'reply' message : it always include a prefix, reply code 
		(3 digits), the first parameters is always the target of the reply (a nick)
	-	Socket: way to speak to other programs using stantards Unix file descriptors
	-	Big-Endian(Network Byte Order) : storing hex number b34f in sequential order b3 followed by 4f
	-	Little-Endian : sotring hex number b34f in sequential order 4f followed by b3
	-	Internet socket, Stream socket, SOCK_STREAM : reliable two-way connected communication streams. thimgs you output into the socket in a certain order will arrive in the same order on the opposite end. Error free. Used by telnet, ssh, http (web browser). Uses TCP
	-	Internet socket, Datagram socket (connectionless sockets), SOCK_DGRAM : Uses UDP (User Datagram Protocol). No need to maintain an open connection, build a packet, gives it an IP header with destination information and send it out. Used when TCP stack is unavailable, or when dropped packets isn't the end. Used in tftp (FTP little brother), dhcpcd (DHCP client), multiplayer games, streaming video, video conferencing...
	-	Usable port : between 1024 and 65535 if unused
	-	NAT : Network Adress Translation
	-	ligne de commande pour lancer IRC avec irssi, un client de reference : irssi -c localhost -w pwd(server-password) -p <port_number>
	-	ctrl+shift+p pour voir les conversations
	-	ctrl+D = sends EOF (end of file) indicator to the process stdin
	-	ctrl+Z = SIGSTP (terminal stop) it puts the program in a stop state, it remaines in memory but isn't executed until resumed. use fg to bring process back to foreground and bg to continue process in background
	-	ctrl+C = SIGINT (interupt) interupts the program and generally causses it to terminate
	-	ctrl+\ = SIGQUIT (terminate the process) it is used to terminate the process and generate a core dump, a core dump is used for debugging with tools like gdb
	-	bitwise AND operator (&) : compare each bit of first and second operand, if both bits are 1 the bit is set to 1 otherwise the bit is set to 0.
	-	Full client identifier : ????????????????????????????????????
	-	Prefixes : ??????????????????????????????????????

Command:
	-	JOIN #<channel_name> : to join #<channel_name>
	-	PART #<channel_name> :<parting_message> :	to leave #<channel_name> and
													leaving a <parting message>
	-	WHOIS <nickname> : show different information about the chosen user
		(basic info, connected channels, connected server, operator status ...)
	-	PRIVMSG <nickname_receiver> :<pirvate_message> : this command sends a
		<private_message> to the <nickname_receiver>
		the server receive this command, then look for the <nickname_recceiver>
		and forward him the <private_message>
		the <nickname_receiver> will receive the command line prefixed with
		the senders full client identifier
