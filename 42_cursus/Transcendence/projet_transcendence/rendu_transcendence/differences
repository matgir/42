diff --git a/lets_see/fortytwo/templates/fortytwo/fortytwo_username.html b/lets_see/fortytwo/templates/fortytwo/fortytwo_username.html
index 2a30851..fe8d448 100644
--- a/lets_see/fortytwo/templates/fortytwo/fortytwo_username.html
+++ b/lets_see/fortytwo/templates/fortytwo/fortytwo_username.html
@@ -1,16 +1,12 @@
 {% extends "base.html" %}
+{% load i18n %}
 
 {% block content %}
 <form method="post">
-<!-- <form method="post" enctype="multipart/form-data"> -->
 	{% csrf_token %}
 	{{ form }}
-	<!-- {{ form.as_p }} -->
-	<!-- <img src="{{ user.avatar.url }}" width="100" height="100" alt="Avatar"> -->
-	<!-- Curent avatar -->
-	<!-- <hr> -->
 	<button type="submit">
-		Submit Username
+		{% trans "Submit Username" %}
 	</button>
 </form>
 {% endblock %}
diff --git a/lets_see/fortytwo/views.py b/lets_see/fortytwo/views.py
index d8ea8f8..3b1de42 100644
--- a/lets_see/fortytwo/views.py
+++ b/lets_see/fortytwo/views.py
@@ -21,13 +21,14 @@ from django.contrib.auth import login
 from django.contrib.auth import get_backends
 # from django.contrib.auth.decorators import login_required
 from .forms import FortyTwoUsername
+from django.utils.translation import gettext as _
 
 # @login_required
 def fortytwo_username(request):
-	print("forty_two_username")
-	print("REQUEST de 42 >>> ", request)
+	# print("forty_two_username")
+	# print("REQUEST de 42 >>> ", request)
 	if request.method == 'POST':
-		print("DANS IF >>>>>>>>>>>>>")
+		# print("DANS IF >>>>>>>>>>>>>")
 		form = FortyTwoUsername(request.POST, request.FILES, instance=request.user)
 		if form.is_valid():
 			form.save()
@@ -35,7 +36,7 @@ def fortytwo_username(request):
 			return redirect('home')
 			# return redirect('user_profile', username=request.user.username)
 	else:
-		print("DANS ELSE >>>>>>>>>>>>>")
+		# print("DANS ELSE >>>>>>>>>>>>>")
 		form = FortyTwoUsername(instance=request.user)
 	return render(request, 'fortytwo/fortytwo_username.html', {'form': form})
 
@@ -45,10 +46,10 @@ def fortytwo_username(request):
 # HELPFUL TOOL
 # SUPPRIMER
 
-def foo(ft):
-    foo.counter += 1
-    print ("Step %d -> " % foo.counter, ft, " function")
-foo.counter = 0
+# def foo(ft):
+#     foo.counter += 1
+#     print ("Step %d -> " % foo.counter, ft, " function")
+# foo.counter = 0
 
 
 
@@ -65,16 +66,17 @@ token_url = "https://api.intra.42.fr/oauth/token"
 
 def oauth_callback(request):
     """Cette vue gère la redirection après l'authentification 42"""
-    foo("oauth_callback")
+    # foo("oauth_callback")
     # Récupère le code d'autorisation depuis l'URL
     authorization_code = request.GET.get("code")
     # if not authorization_code:
     #     authorization_code = request.session["authorization_code"]
 
-    print("code recu >>>>>>>>>>>>>>>>> ", authorization_code)
+    # print("code recu >>>>>>>>>>>>>>>>> ", authorization_code)
     
     if not authorization_code:
-        return JsonResponse({"error": "1- Pas de code d'autorisation fourni"}, status=500)
+        return JsonResponse({"error": _("1- No authorization code given")}, status=500)
+        # return JsonResponse({"error": "1- Pas de code d'autorisation fourni"}, status=500)
 
     # Stocker le code en session avant la redirection
     request.session["authorization_code"] = authorization_code
@@ -86,8 +88,8 @@ def oauth_callback(request):
 
 
 def exchange_code_for_token(request, code):
-    foo( "exchange_code_for_token")
-    print("dans exhange ft, code is : ", request.session.get("authorization_code"))
+    # foo( "exchange_code_for_token")
+    # print("dans exhange ft, code is : ", request.session.get("authorization_code"))
     data = {
         "grant_type": "authorization_code",
         "client_id": CLIENT_ID,
@@ -98,14 +100,16 @@ def exchange_code_for_token(request, code):
     # Envoie la requête à l'API de 42 pour obtenir le token
     response = requests.post(token_url, data=data)
     if response.status_code != 200:
-        print("❌>> Erreur dans la requête :", response.status_code, response.text)
-        return JsonResponse({"error": "Erreur lors de l'echange de code contre un token d'acces"}, status=500)
+        # print("❌>> Erreur dans la requête :", response.status_code, response.text)
+        return JsonResponse({"error": _("Error during the access token exchange")}, status=500)
+        # return JsonResponse({"error": "Erreur lors de l'echange de code contre un token d'acces"}, status=500)
     access_token = response.json().get('access_token')
     if not access_token:
-        return JsonResponse({"error": "2- Pas de code d'autorisation fourni"}, status=500)
+        return JsonResponse({"error": _("2- No authorization code given")}, status=500)
+        # return JsonResponse({"error": "2- Pas de code d'autorisation fourni"}, status=500)
     
     request.session["access_token"] = access_token
-    print("1- DEBUG >>>", access_token)
+    # print("1- DEBUG >>>", access_token)
 
     return (access_token)
 
@@ -151,34 +155,37 @@ def download_avatar(url):
     return None
 
 def	pong_game(request):
-    foo("pong_game")
+    # foo("pong_game")
     authorization_code = request.session.get("authorization_code")
     if not authorization_code:
-        return JsonResponse({"error": "Code d'autorisation manquant en session"}, status=500)
-    print("Code récupéré dans pong_game >>>>>>>>>>>>>>>>>", authorization_code)
+        return JsonResponse({"error": _("Missing authorization code during session")}, status=500)
+        # return JsonResponse({"error": "Code d'autorisation manquant en session"}, status=500)
+    # print("Code récupéré dans pong_game >>>>>>>>>>>>>>>>>", authorization_code)
 
     # Maintenant, échange ce code contre un token
     access_token = request.session.get("access_token")
     if access_token:
-        print ("Access token received!")
+        # print ("Access token received!")
         return redirect('home')
         # return HttpResponse("Hello, this will be the pong game.")
 
     access_token = exchange_code_for_token(request, authorization_code)
     if not access_token:
-        return JsonResponse({"error": "Erreur lors de l'echange du code contre token"}, status=500)
+        return JsonResponse({"error": _("Error during the exchange of the code for the token")}, status=500)
+        # return JsonResponse({"error": "Erreur lors de l'echange du code contre token"}, status=500)
     
     if not is_token_valid(access_token):
-        return JsonResponse({"error": "Token expired"}, status=401)
+        return JsonResponse({"error": _("Token expired")}, status=401)
 
 
     user_info = get_42_user_info(access_token)
     if user_info:
-        print("! Infos du user obtenues !")
+        print("! Infos du user obtenues !")####
         # print("Voici infos user >> ", user_info.get("login"))
-        print("Voici infos user >> ", user_info)
+        # print("Voici infos user >> ", user_info)
     else:
-        return JsonResponse({"error": "Impossible de récupérer les infos utilisateur"}, status=500)
+        return JsonResponse({"error": _("Could not collect user informations")}, status=500)
+        # return JsonResponse({"error": "Impossible de récupérer les infos utilisateur"}, status=500)
 
 
         # Vérifier si l'utilisateur existe déjà
@@ -214,22 +221,22 @@ def	pong_game(request):
     #     print(user.avatar)
     #     user.save()
 
-    print("REQUEST >>> ", request)
-    print(request, request.method, request.POST, request.FILES, request.user)
+    # print("REQUEST >>> ", request)
+    # print(request, request.method, request.POST, request.FILES, request.user)
 
-    print("42 USER >>> ", user)
+    # print("42 USER >>> ", user)
     # Connecter l'utilisateur automatiquement
 
     # Assigner un backend d'authentification au user
     user.backend = 'allauth.account.auth_backends.AuthenticationBackend'
     # fortytwo_username(request, user)
     login(request, user)
-    print(request.user)###
+    # print(request.user)###
 
 
     request.session["access_token"] = access_token
     request.session.modified = True
-    print("2- ACCESS TOKEN >>>", request.session.get("access_token"))
+    # print("2- ACCESS TOKEN >>>", request.session.get("access_token"))
 
     # return (fortytwo_username(request))
     if (user.username):
@@ -238,8 +245,8 @@ def	pong_game(request):
     # return (redirect("home"))
     # return (HttpResponse("Hello, this will be the pong game."))
 
-class ProtectedView(APIView):
-	permission_classes = [IsAuthenticated]
+# class ProtectedView(APIView):
+# 	permission_classes = [IsAuthenticated]
 
-	def get(self, request):
-		return Response({"message": "This view is protected"})
\ No newline at end of file
+# 	def get(self, request):
+# 		return Response({"message": "This view is protected"})
\ No newline at end of file
diff --git a/lets_see/jeux_du_pong/static/js/pong.js b/lets_see/jeux_du_pong/static/js/pong.js
index a5dfea2..49afe02 100644
--- a/lets_see/jeux_du_pong/static/js/pong.js
+++ b/lets_see/jeux_du_pong/static/js/pong.js
@@ -147,7 +147,8 @@ function draw() {
 		ctx.font = "40px Arial";
 		ctx.textAlign = "center";
 		ctx.fillText(
-			score1 > score2 ? `${currentUserName} Wins !` : "Player 2 Wins !",
+			score1 > score2 ? gettext("%s Wins !").replace("%s", currentUserName) : gettext("Player 2 Wins !"),
+			// score1 > score2 ? `${currentUserName} Wins !` : "Player 2 Wins !",
 			canvas.width / 2,
 			canvas.height / 2
 		);
diff --git a/lets_see/jeux_du_pong/templates/jeux_du_pong/game.html b/lets_see/jeux_du_pong/templates/jeux_du_pong/game.html
index 7f43e3e..0a729ce 100644
--- a/lets_see/jeux_du_pong/templates/jeux_du_pong/game.html
+++ b/lets_see/jeux_du_pong/templates/jeux_du_pong/game.html
@@ -1,5 +1,6 @@
 {% extends "base.html" %}
-{% block title %}Play Pong{% endblock %}
+{% load i18n %}
+{% block title %}{% trans "Play Pong" %}{% endblock %}
 
 {% block content %}
 {% load static %}
@@ -9,7 +10,7 @@
 </script>
 <canvas id="pongCanvas" width="800" height="500" style="border:1px solid #000;"></canvas>
 <button id="playAgainBtn" style="margin-top: 20px; display: none;">
-Play Again
+{% trans "Play Again" %}
 </button>
 <script src="{% static 'js/pong.js' %}"></script>
 {% endblock %}
diff --git a/lets_see/jeux_du_pong/views.py b/lets_see/jeux_du_pong/views.py
index fa8ee7a..66a6d43 100644
--- a/lets_see/jeux_du_pong/views.py
+++ b/lets_see/jeux_du_pong/views.py
@@ -4,6 +4,7 @@ from django.views.decorators.csrf import csrf_exempt
 from django.http import JsonResponse
 import json
 from .models import Match
+from django.utils.translation import gettext as _
 
 @login_required
 def pong_game(request):
@@ -34,5 +35,5 @@ def report_match(request):
 			request.user.losses += 1
 		request.user.save()
 
-		return JsonResponse({"status": "ok"})
-	return JsonResponse({"error": "Invalid request"}, status=400)
\ No newline at end of file
+		return JsonResponse({"status": _("ok")})
+	return JsonResponse({"error": _("Invalid request")}, status=400)
\ No newline at end of file
diff --git a/lets_see/lets_see/context_processors.py b/lets_see/lets_see/context_processors.py
index d326d74..4153a63 100644
--- a/lets_see/lets_see/context_processors.py
+++ b/lets_see/lets_see/context_processors.py
@@ -1,11 +1,12 @@
 import os
+from django.utils.translation import gettext as _
 
 def client_id_context(request):
     return {
-        "env_client_id": os.getenv("OAUTH_CLIENT_ID", "Value does not exist")
+        "env_client_id": os.getenv("OAUTH_CLIENT_ID", _("Value does not exist"))
     }
 
 def uri_context(request):
     return {
-        "env_uri": os.getenv("REDIRECT_URI", "Value does not exist")
+        "env_uri": os.getenv("REDIRECT_URI", _("Value does not exist"))
     }
diff --git a/lets_see/lets_see/settings.py b/lets_see/lets_see/settings.py
index df2c982..0aa7bd7 100644
--- a/lets_see/lets_see/settings.py
+++ b/lets_see/lets_see/settings.py
@@ -75,6 +75,9 @@ MIDDLEWARE = [
     # default
     'django.middleware.security.SecurityMiddleware',
     'django.contrib.sessions.middleware.SessionMiddleware',
+    # Internationalization
+    'django.middleware.locale.LocaleMiddleware',
+    # default
     'django.middleware.common.CommonMiddleware',
     'django.middleware.csrf.CsrfViewMiddleware',
     'django.contrib.auth.middleware.AuthenticationMiddleware',
@@ -168,11 +171,20 @@ AUTH_PASSWORD_VALIDATORS = [
 # Internationalization
 # https://docs.djangoproject.com/en/5.1/topics/i18n/
 
-LANGUAGE_CODE = 'en-us'
+LANGUAGE_CODE = 'en'
+USE_I18N = True
+USE_L10N = True
+LANGUAGES = [
+    ('en', 'English'),
+    ('fr', 'French'),
+    ('es', 'Spanish'),
+]
 
-TIME_ZONE = 'Europe/Paris'
+LOCALE_PATHS = [
+    BASE_DIR / 'locale',
+]
 
-USE_I18N = True
+TIME_ZONE = 'Europe/Paris'
 
 USE_TZ = True
 
diff --git a/lets_see/lets_see/urls.py b/lets_see/lets_see/urls.py
index 3a52f7b..fcb5e1a 100644
--- a/lets_see/lets_see/urls.py
+++ b/lets_see/lets_see/urls.py
@@ -17,17 +17,25 @@ Including another URLconf
 from django.contrib import admin
 from django.urls import path, include
 from django.views.generic import TemplateView
+from django.views.i18n import JavaScriptCatalog
+from django.conf.urls.i18n import i18n_patterns
 from django.conf import settings #####
 from django.conf.urls.static import static #####
 
 urlpatterns = [
+    path('jsi18n/', JavaScriptCatalog.as_view(), name='javascript-catalog'),
+    path('i18n/', include('django.conf.urls.i18n')),
+]
+
+urlpatterns += i18n_patterns(
+    # path('', include('lets_see.urls')),
     path('', TemplateView.as_view(template_name='home.html'), name='home'),
     path('admin/', admin.site.urls),
     path('users/', include('users.urls')),
     path('jeux_du_pong/', include('jeux_du_pong.urls')),
     path('tournament/', include('tournament.urls')),
     path('fortytwo/', include('fortytwo.urls')),
-]
+)
 
 if settings.DEBUG:#####
     urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)#####
diff --git a/lets_see/run_dev.sh b/lets_see/run_dev.sh
index e6b83f7..abc7f4f 100644
--- a/lets_see/run_dev.sh
+++ b/lets_see/run_dev.sh
@@ -1,5 +1,8 @@
 #!/bin/sh
 
+django-admib makemessages -l fr
+django-admib makemessages -l es
+
 python3 manage.py makemigrations users
 python3 manage.py migrate
 
diff --git a/lets_see/run_prod.sh b/lets_see/run_prod.sh
index 291a074..e0e5262 100644
--- a/lets_see/run_prod.sh
+++ b/lets_see/run_prod.sh
@@ -1,5 +1,8 @@
 #!/bin/sh
 
+django-admib makemessages -l fr
+django-admib makemessages -l es
+
 python3 manage.py makemigrations users
 python3 manage.py migrate
 
diff --git a/lets_see/templates/base.html b/lets_see/templates/base.html
index cfe40a1..32cf15f 100644
--- a/lets_see/templates/base.html
+++ b/lets_see/templates/base.html
@@ -1,5 +1,6 @@
 <!DOCTYPE html>
-<html lang="en">
+{% load i18n %}
+<html lang="{{ LANGUAGE_CODE }}">
 	<!-- {% if messages %}
 		<ul class=""messages>
 			{% for message in messages %}
@@ -14,9 +15,11 @@
 		<meta name="viewport" content="width=device-width, initial-scale=1.0">
 		<title>
 			{% block title %}
-			Da pong Game
+			Entropia
 			{% endblock %}
 		</title>
+		<script src="{% url 'javascript-catalog' %}">
+		</script>
 		<style>
 			nav {
 				background-color: #777;
@@ -71,23 +74,20 @@
 		<nav>
 			<div>
 				<a href="{% url 'home' %}">
-					Home
+					{% trans "Home" %}
 				</a>
 				{% if user.is_authenticated %}
 				<a href="{% url 'my_profile' %}">
-					My Profile
+					{% trans "Profile" %}
 				</a>
-				<!-- <a href="{% url 'my_match_history' %}">
-					Match History
-				</a> -->
 				{% endif %}
 			</div>
 			{% if user.is_authenticated %}
 			<div class="search-form">
 				<form method="GET" action="{% url 'search_friends' %}">
-					<input type="text" name="q" placeholder="Search friends" required>
+					<input type="text" name="q" placeholder={% trans "Search friends" %} required>
 					<button type="submit">
-						Search
+						{% trans "Search" %}
 					</button>
 				</form>
 			</div>
@@ -95,20 +95,34 @@
 			<div>
 				{% if user.is_authenticated %}
 				<a href="{% url 'account_logout' %}">
-					Logout
+					{% trans "Logout" %}
 				</a>
 				{% else %}
 				<a href="{% url 'account_login' %}">
-					Login
+					{% trans "Login" %}
 				</a>
 				<a href="{% url 'account_signup' %}">
-					Sign Up
+					{% trans "Sign Up" %}
 				</a>
 				<a href="https://api.intra.42.fr/oauth/authorize?client_id={{ env_client_id }}&redirect_uri={{ env_uri }}&response_type=code">
-					Log in with 42
+					{% trans "Login with 42" %}
 				</a>
 				{% endif %}
 			</div>
+			<div>
+				<form action="{% url 'set_language' %}" method="post">
+				{% csrf_token %}
+				<select name="language" onchange="this.form.submit()">
+					{% get_current_language as LANGUAGE_CODE %}
+					{% get_available_languages as LANGUAGES %}
+					{% for lang in LANGUAGES %}
+						<option value="{{ lang.0 }}" {% if lang.0 == LANGUAGE_CODE %}selected{% endif %}>
+							{{lang.1}}
+						</option>
+					{% endfor %}
+				</select>
+				</form>
+			</div>
 		</nav>
 	</body>
 	<body>
diff --git a/lets_see/templates/home.html b/lets_see/templates/home.html
index 68d6b68..a123c5b 100644
--- a/lets_see/templates/home.html
+++ b/lets_see/templates/home.html
@@ -1,14 +1,15 @@
 {% extends "base.html" %}
+{% load i18n %}
 
 {% block content %}
 <h1>
-	WELCOME TO DA PONG GAME
+	{% trans "WELCOME TO ENTROPIA" %}
 </h1>
 {% if user.is_authenticated %}
 <div>
 	<a href="{% url 'pong_game' %}">
 		<button class="bg-blue-600 text-white px-6 py-3 rounded-2xl shadow-lg hover:bg-blue-700 text-lg font-semibold">
-			Play Pong Now
+			{% trans "Play Pong Now" %}
 		</button>
 	</a>
 </div>
diff --git a/lets_see/tournament/templates/tournament/match_history.html b/lets_see/tournament/templates/tournament/match_history.html
index 81a7e22..03c1bc3 100644
--- a/lets_see/tournament/templates/tournament/match_history.html
+++ b/lets_see/tournament/templates/tournament/match_history.html
@@ -1,18 +1,19 @@
 {% extends "base.html" %}
+{% load i18n %}
 
 {% block content %}
 <h1>
-	{{ user.username }}'s match history'
+	{% trans "{{ user.username }}'s match history" %}
 </h1>
 
 	{% if matches %}
 		<table>
 			<thead>
 				<tr>
-					<th>Opponent</th>
-					<th>Result</th>
-					<th>Score</th>
-					<th>Date</th>
+					<th>{% trans "Opponent" %}</th>
+					<th>{% trans "Result" %}</th>
+					<th>{% trans "Score" %}</th>
+					<th>{% trans "Date" %}</th>
 				</tr>
 			</thead>
 			<tbody>
@@ -22,11 +23,11 @@
 						<td>
 							{% if match.result == "win" %}
 								<span style="color: green;">
-									Win
+									{% trans "Win" %}
 								</span>
 							{% else %}
 								<span style="color: red;">
-									Loss
+									{% trans "Loss" %}
 								</span>
 							{% endif %}
 						</td>
@@ -42,7 +43,7 @@
 		</table>
 	{% else %}
 		<p>
-			No matches recorded yet.
+			{% trans "No matches recorded yet." %}
 		</p>
 	{% endif %}
 {% endblock %}
diff --git a/lets_see/users/consumers.py b/lets_see/users/consumers.py
index 5b3d50d..9472eaa 100644
--- a/lets_see/users/consumers.py
+++ b/lets_see/users/consumers.py
@@ -1,14 +1,10 @@
 from channels.generic.websocket import AsyncWebsocketConsumer
 from channels.db import database_sync_to_async
 import json
-# import logging ####
-# logger = logging.getLogger(__name__) ####
 
 class OnlineStatusConsumer(AsyncWebsocketConsumer):
 	async def connect(self):
-		# logger.info(f"WS CONNECT ATTEMPT ON : {self.scope['user']}") ####
 		if self.scope["user"].is_authenticated:
-			# logger.info(f"{self.scope['user']} connected") ####
 			await self.set_online(True)
 		await self.accept()
 
@@ -19,8 +15,4 @@ class OnlineStatusConsumer(AsyncWebsocketConsumer):
 	@database_sync_to_async
 	def set_online(self, status):
 		from users.models import CustomUser
-		CustomUser.objects.filter(id=self.scope["user"].id).update(online_status=status)
-		# user = self.scope["user"]
-		# if user.is_authenticated:
-		# 	user.online_status = status
-		# 	user.save()
\ No newline at end of file
+		CustomUser.objects.filter(id=self.scope["user"].id).update(online_status=status)
\ No newline at end of file
diff --git a/lets_see/users/templates/users/friends.html b/lets_see/users/templates/users/friends.html
index 40c59dc..7eda60a 100644
--- a/lets_see/users/templates/users/friends.html
+++ b/lets_see/users/templates/users/friends.html
@@ -1,12 +1,13 @@
 {% extends "base.html" %}
+{% load i18n %}
 
 {% block title %}
-My friends
+{% trans "My friends" %}
 {% endblock %}
 
 {% block content %}
 <h2>
-	My Friends
+	{% trans "My Friends" %}
 </h2>
 {% if friends %}
 <ul>
@@ -15,15 +16,12 @@ My friends
 		<a href="{% url 'user_profile' friend.username %}">
 			{{ friend.username }}
 		</a>
-		<!-- <a href="{% url 'remove_friend' friend.username %}">
-			Remove from friends
-		</a> -->
 	</li>
 	{% endfor %}
 </ul>
 {% else %}
 <p>
-	You have no friends yet.
+	{% trans "You have no friends yet." %}
 </p>
 {% endif %}
 {% endblock %}
\ No newline at end of file
diff --git a/lets_see/users/templates/users/profile.html b/lets_see/users/templates/users/profile.html
index 6ad1076..54f3273 100644
--- a/lets_see/users/templates/users/profile.html
+++ b/lets_see/users/templates/users/profile.html
@@ -1,4 +1,5 @@
 {% extends "base.html" %}
+{% load i18n %}
 
 {% block content %}
 <h1>
@@ -17,41 +18,41 @@
 {% endif %} -->
 
 <p>
-	Wins : {{ user.wins }} | Losses : {{ user.losses }}
+	{% trans "Wins : {{ user.wins }} | Losses : {{ user.losses }}" %}
 </p>
 {% if user == request.user %}
 	<a href="{% url 'my_match_history' %}">
-		View Match History
+		{% trans "My Match History" %}
 	</a>
 	<hr>
 	<a href="{% url 'friends_list' %}">
-		View friends
+		{% trans "View friends" %}
 	</a>
 	<hr>
 	<a href="{% url 'profile_edit' %}">
-		Edit profile
+		{% trans "Edit profile" %}
 	</a>
 {% else %}
 	<a href="{% url 'match_history' user.username %}">
-		View Match History
+		{% trans "View Match History" %}
 	</a>
 	<hr>
 	<a href="{% url 'add_friend' user.username %}">
-		Add Friend
+		{% trans "Add Friend" %}
 	</a>
 	<hr>
 	<a href="{% url 'remove_friend' user.username %}">
-		Remove Friend
+		{% trans "Remove Friend" %}
 	</a>
 	<hr>
 	<div>
 		{% if user.online_status %}
 			<span style="color:green">
-				Online
+				{% trans "Online" %}
 			</span>
 		{% else %}
 			<span style="color:red">
-				Offline
+				{% trans "Offline" %}
 			</span>
 		{% endif %}
 	</div>
diff --git a/lets_see/users/templates/users/profile_update.html b/lets_see/users/templates/users/profile_update.html
index 8d73268..806792e 100644
--- a/lets_see/users/templates/users/profile_update.html
+++ b/lets_see/users/templates/users/profile_update.html
@@ -1,15 +1,12 @@
 {% extends "base.html" %}
+{% load i18n %}
 
 {% block content %}
 <form method="post" enctype="multipart/form-data">
 	{% csrf_token %}
-	<!-- {{ form.as_p }} -->
 	{{ form }}
-	<!-- <img src="{{ user.avatar.url }}" width="100" height="100" alt="Avatar"> -->
-	<!-- Curent avatar -->
-	<!-- <hr> -->
 	<button type="submit">
-		Save Changes
+		{% trans "Save Changes" %}
 	</button>
 </form>
 {% endblock %}
diff --git a/lets_see/users/templates/users/search_results.html b/lets_see/users/templates/users/search_results.html
index 94269a9..d65065b 100644
--- a/lets_see/users/templates/users/search_results.html
+++ b/lets_see/users/templates/users/search_results.html
@@ -1,12 +1,13 @@
 {% extends "base.html" %}
+{% load i18n %}
 
 {% block title %}
-Search Friends
+{% trans "Search Friends" %}
 {% endblock %}
 
 {% block content %}
 <h2>
-	Search Results for "{{ query }}"
+	{% trans "Search Results for "{{ query }}"" %}
 </h2>
 {% if results %}
 <ul>
@@ -15,18 +16,12 @@ Search Friends
 		<a href="{% url 'user_profile' user.username %}">
 			{{ user.username }}
 		</a>
-		<!-- <a href="{% url 'add_friend' user.username %}">
-			Add Friend
-		</a> -->
 	</li>
 	{% endfor %}
 </ul>
 {% else %}
 <p>
-	No users found.
+	{% trans "No users found." %}
 </p>
 {% endif %}
-<!-- <a href="{% url 'home' %}">
-	Back to Home
-</a> -->
 {% endblock %}
\ No newline at end of file
diff --git a/lets_see/users/validators.py b/lets_see/users/validators.py
index 4d1b50a..e38a9d9 100644
--- a/lets_see/users/validators.py
+++ b/lets_see/users/validators.py
@@ -2,6 +2,7 @@ from django.contrib.auth.validators import ASCIIUsernameValidator
 from django.core.exceptions import ValidationError
 from django.template.defaultfilters import filesizeformat
 from PIL import Image
+from django.utils.translation import gettext as _
 
 custom_username_validdators = [ASCIIUsernameValidator()]
 
@@ -9,13 +10,14 @@ def validate_avatar(image):
 	max_size = 2 * 1024 * 1024 # max avatar size = 2MB
 
 	if image.size > max_size:
-		raise ValidationError(f"Avatar is too large (max {filesizeformat(max_size)}).")
+		raise ValidationError(_("Avatar is too large (max %(max_size)s).") % {'max_size' : filesizeformat(max_size)})
+		# raise ValidationError(f"Avatar is too large (max {filesizeformat(max_size)}).")
 
 	try:
 		img = Image.open(image)
 		img.verify() # checks if it is really an image
 		format = img.format.lower()
 		if format not in ['jpeg', 'png']:
-			raise ValidationError("Unsuported image format. Only JPEG and PNG allowed.")
+			raise ValidationError(_("Unsuported image format. Only JPEG and PNG allowed."))
 	except Exception:
-		raise ValidationError("Invalide image file.")
\ No newline at end of file
+		raise ValidationError(_("Invalide image file."))
\ No newline at end of file
diff --git a/lets_see/users/views.py b/lets_see/users/views.py
index 4287f73..26dd894 100644
--- a/lets_see/users/views.py
+++ b/lets_see/users/views.py
@@ -3,36 +3,39 @@ from django.contrib.auth.decorators import login_required
 from .forms import UserProfileForm
 from .models import CustomUser
 from django.contrib import messages
+from django.utils.translation import gettext as _
 
 # Create your views here.
 
 @login_required
 def profile_update(request):
-	print("profile_update")
+	# print("profile_update")
 	if request.method == 'POST':
-		print("DANS IF >>>>>>>>>>>>>")
+		# print("DANS IF >>>>>>>>>>>>>")
 		form = UserProfileForm(request.POST, request.FILES, instance=request.user)
 		if form.is_valid():
 			form.save()
 			return redirect('my_profile')
 			# return redirect('user_profile', username=request.user.username)
 	else:
-		print("DANS ELSE >>>>>>>>>>>>>")
+		# print("DANS ELSE >>>>>>>>>>>>>")
 		form = UserProfileForm(instance=request.user)
 	return render(request, 'users/profile_update.html', {'form': form})
 
+
+
 @login_required
 def add_friend(request, username):
 	# print("request in add friend is : \n\t", request)#####
 	if request.user.username == username:
-		messages.error(request, "You can not be friends with yoursefl.", extra_tags="error")
+		messages.error(request, _("You can not be friends with yoursefl."), extra_tags="error")
 		return (redirect('my_profile'))
 	if request.user.friends.filter(username=username).exists():
-		messages.error(request, f"You are already friends with {username}.", extra_tags="warning")
+		messages.error(request, _("You are already friends with %(username)s.") % {'username': username}, extra_tags="warning")
 	else:
 		user_to_add = get_object_or_404(CustomUser, username=username)
 		request.user.friends.add(user_to_add)
-		messages.success(request, f"You are now friends with {username}.", extra_tags="success")
+		messages.success(request, _("You are now friends with %(username)s.") % {'username': username}, extra_tags="success")
 	return redirect('friends_list')
 	# print("\nuser_to_add in add friend is : \n\t", user_to_add.username, "\nrequest.user.username in add frisnd is : \n\t", request.user.username) #####
 	# if user_to_add.username == request.user.username or request.user.friends.filter(username=user_to_add.username):
@@ -42,14 +45,14 @@ def add_friend(request, username):
 @login_required
 def remove_friend(request, username):
 	if request.user.username == username:
-		messages.error(request, "As you can not be friends with yourself, you can not unfriend yourself.", extra_tags='error')
+		messages.error(request, _("As you can not be friends with yourself, you can not unfriend yourself."), extra_tags='error')
 		return (redirect('my_profile'))
 	if request.user.friends.filter(username=username).exists():
 		user_to_remove = get_object_or_404(CustomUser, username=username)
 		request.user.friends.remove(user_to_remove)
-		messages.success(request, f"You removed {username} from your friends", extra_tags="success")
+		messages.success(request, _("You removed %(username)s from your friends") % {'username': username}, extra_tags="success")
 	else:
-		messages.error(request, f"{username} is not in your friends list", extra_tags="warning")
+		messages.error(request, _("%(username)s is not in your friends list") % {'username': username}, extra_tags="warning")
 	return redirect('friends_list')
 
 # @login_required
