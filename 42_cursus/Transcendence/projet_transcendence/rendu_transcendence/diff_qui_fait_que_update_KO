diff --git a/caddy/Caddyfile b/caddy/Caddyfile
index 328542d..1710c36 100644
--- a/caddy/Caddyfile
+++ b/caddy/Caddyfile
@@ -5,7 +5,7 @@
 
 localhost {
 	handle_path /static/* {
-		root * /app/static
+		root * /app
 		file_server browse
 	}
 
@@ -17,6 +17,11 @@ localhost {
 	handle {
 		reverse_proxy the_transcendence:8000
 	}
+
+	reverse_proxy /ws/* the_transcendence:8000 {
+		flush_interval -1
+	}
+
 	encode gzip
 	tls internal
 }
\ No newline at end of file







diff --git a/lets_see/Dockerfile.dev b/lets_see/Dockerfile.dev
index 7a2ddc7..38e0464 100644
--- a/lets_see/Dockerfile.dev
+++ b/lets_see/Dockerfile.dev
@@ -1,4 +1,4 @@
-FROM python:3.13-alpine3.19
+FROM python:3.10-alpine3.19
 # from image python (to run python applications) and alpine (lighweight linux)
 
 RUN mkdir /app







diff --git a/lets_see/Dockerfile.prod b/lets_see/Dockerfile.prod
index 7756a69..1d1c426 100644
--- a/lets_see/Dockerfile.prod
+++ b/lets_see/Dockerfile.prod
@@ -1,4 +1,4 @@
-FROM python:3.13-alpine3.19
+FROM python:3.10-alpine3.19
 # from image python (to run python applications) and alpine (lighweight linux)
 
 RUN mkdir /app







diff --git a/lets_see/fortytwo/forms.py b/lets_see/fortytwo/forms.py
new file mode 100644
index 0000000..434625d
--- /dev/null
+++ b/lets_see/fortytwo/forms.py
@@ -0,0 +1,7 @@
+from django import forms
+from users.models import CustomUser
+
+class FortyTwoUsername(forms.ModelForm):
+    class Meta:
+        model = CustomUser
+        fields = ['username']
\ No newline at end of file







diff --git a/lets_see/fortytwo/templates/fortytwo/fortytwo_username.html b/lets_see/fortytwo/templates/fortytwo/fortytwo_username.html
new file mode 100644
index 0000000..2a30851
--- /dev/null
+++ b/lets_see/fortytwo/templates/fortytwo/fortytwo_username.html
@@ -0,0 +1,16 @@
+{% extends "base.html" %}
+
+{% block content %}
+<form method="post">
+<!-- <form method="post" enctype="multipart/form-data"> -->
+	{% csrf_token %}
+	{{ form }}
+	<!-- {{ form.as_p }} -->
+	<!-- <img src="{{ user.avatar.url }}" width="100" height="100" alt="Avatar"> -->
+	<!-- Curent avatar -->
+	<!-- <hr> -->
+	<button type="submit">
+		Submit Username
+	</button>
+</form>
+{% endblock %}







diff --git a/lets_see/fortytwo/urls.py b/lets_see/fortytwo/urls.py
index 60e186a..860fb8b 100644
--- a/lets_see/fortytwo/urls.py
+++ b/lets_see/fortytwo/urls.py
@@ -5,4 +5,5 @@ app_name = "fortytwo"
 urlpatterns = [
 	path("oauth_callback/", views.oauth_callback, name="oauth_callback"),
 	path("", views.pong_game, name="pong_game"),
+	path("fortytwo_username/", views.fortytwo_username, name="fortytwo_username"),
 ]







diff --git a/lets_see/fortytwo/views.py b/lets_see/fortytwo/views.py
index f067a92..827ac71 100644
--- a/lets_see/fortytwo/views.py
+++ b/lets_see/fortytwo/views.py
@@ -19,6 +19,29 @@ from users.models import CustomUser
 # from allauth.account.forms import LoginForm
 from django.contrib.auth import login
 from django.contrib.auth import get_backends
+# from django.contrib.auth.decorators import login_required
+from .forms import FortyTwoUsername
+
+# @login_required
+def fortytwo_username(request):
+	print("forty_two_username")
+	print("REQUEST de 42 >>> ", request)
+	if request.method == 'POST':
+		print("DANS IF >>>>>>>>>>>>>")
+		form = FortyTwoUsername(request.POST, request.FILES, instance=request.user)
+		if form.is_valid():
+			print("form is vaid")
+			form.save()
+			# return
+			return redirect('home')
+			# return redirect('user_profile', username=request.user.username)
+	else:
+		print("DANS ELSE >>>>>>>>>>>>>")
+		form = FortyTwoUsername(instance=request.user)
+	return render(request, 'fortytwo/fortytwo_username.html', {'form': form})
+
+
+
 
 # HELPFUL TOOL
 # SUPPRIMER
@@ -29,12 +52,16 @@ def foo(ft):
 foo.counter = 0
 
 
+
+
+
 print("\n\n===================== VIEW DJANGO PONG GAME ==========================\n\n")
 
 # Récupérer le client_id et client_secret depuis les settings
 CLIENT_ID = settings.OAUTH_CLIENT_ID
 CLIENT_SECRET = settings.OAUTH_CLIENT_SECRET
-REDIRECT_URI = "http://localhost:8000/fortytwo/oauth_callback/"
+# REDIRECT_URI = "http://localhost:8000/fortytwo/oauth_callback/"
+REDIRECT_URI = settings.REDIRECT_URI
 token_url = "https://api.intra.42.fr/oauth/token"
 
 def oauth_callback(request):
@@ -117,6 +144,12 @@ def refresh_access_token(refresh_token):
     else:
         return None
 
+from django.core.files.base import ContentFile #deplacer en haut du fichier
+def download_avatar(url):
+    response = requests.get(url)
+    if response.status_code == 200:
+        return ContentFile(response.content)
+    return None
 
 def	pong_game(request):
     foo("pong_game")
@@ -143,41 +176,67 @@ def	pong_game(request):
     user_info = get_42_user_info(access_token)
     if user_info:
         print("! Infos du user obtenues !")
-        print("Voici infos user >> ", user_info.get("login"))
+        # print("Voici infos user >> ", user_info.get("login"))
+        print("Voici infos user >> ", user_info)
     else:
         return JsonResponse({"error": "Impossible de récupérer les infos utilisateur"}, status=500)
 
 
         # Vérifier si l'utilisateur existe déjà
     user, created = CustomUser.objects.get_or_create(
-        username=user_info["login"],
+        login_42=user_info["login"],
+        # avatar=user_info["image"]["versions"]["small"],  # URL de l'avatar
+        # avatar=download_avatar(user_info["image"]["versions"]["small"])
         defaults={
-            "username": user_info["login"]  # Nom d'utilisateur 42
-            # "avatar": user_info["image"]["link"]  # URL de l'avatar
+            "login_42": user_info["login"],  # Nom d'utilisateur 42
         }
     )
 
+
+            # "avatar": user_info["image"]["link"]  # URL de l'avatar
+
+    if created or not user.avatar or user.avatar.name == "default.png":
+        avatar_file = download_avatar(user_info["image"]["versions"]["medium"])
+        if avatar_file:
+            user.avatar.save(f"{user_info['login']}_avatar.jpg", avatar_file)
+            user.save()
+
+    ### test mateo
+    # user.username = user.login_42
+    # print("DEBUG : USERNAME=LOGIN42? --> ", user.username, "=", user.login_42)
+    ### test mateo
+
+            ###### REACTIVER ######
     # Mettre à jour les infos si l'utilisateur existe déjà
-    if not created:
-        user.username = user_info["login"]
-        # user.avatar = user_info["image"]["link"]
-        user.save()
+    # if not created:
+    #     user.username = user_info["login"]
+    #     user.avatar = user_info["image"]["versions"]["small"]
+    #     # avatar=download_avatar(user_info["image"]["versions"]["small"])
+    #     print(user.avatar)
+    #     user.save()
 
     print("REQUEST >>> ", request)
+    print(request, request.method, request.POST, request.FILES, request.user)
 
     print("42 USER >>> ", user)
     # Connecter l'utilisateur automatiquement
 
     # Assigner un backend d'authentification au user
     user.backend = 'allauth.account.auth_backends.AuthenticationBackend'
+    # fortytwo_username(request, user)
     login(request, user)
+    print(request.user)###
 
 
     request.session["access_token"] = access_token
     request.session.modified = True
     print("2- ACCESS TOKEN >>>", request.session.get("access_token"))
 
-    return redirect('home')
+    # return (fortytwo_username(request))
+    if (user.username):
+        return (redirect("home"))
+    return (redirect("/fortytwo/fortytwo_username/"))
+    # return (redirect("home"))
     # return (HttpResponse("Hello, this will be the pong game."))
 
 class ProtectedView(APIView):







diff --git a/lets_see/lets_see/asgi.py b/lets_see/lets_see/asgi.py
index 5446ede..e07156b 100644
--- a/lets_see/lets_see/asgi.py
+++ b/lets_see/lets_see/asgi.py
@@ -13,6 +13,8 @@ import django
 
 from django.core.asgi import get_asgi_application
 from channels.routing import ProtocolTypeRouter, URLRouter
+from channels.auth import AuthMiddlewareStack
+from users.routing import websocket_urlpatterns
 # from django.urls import path
 # from prod.consumers import MyWebSocketConsumer
 
@@ -21,7 +23,7 @@ django.setup()
 
 application = ProtocolTypeRouter({
 	"http": get_asgi_application(),
-	# "websocket": URLRouter([
-		# path("ws/#######/", MyWebSocketConsumer.as_asgi()),
-	# ]),
+	"websocket": AuthMiddlewareStack(
+		URLRouter(websocket_urlpatterns)
+	),
 })







diff --git a/lets_see/lets_see/settings.py b/lets_see/lets_see/settings.py
index 39fcf26..ac46f59 100644
--- a/lets_see/lets_see/settings.py
+++ b/lets_see/lets_see/settings.py
@@ -32,6 +32,7 @@ SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY')
 # Get environment variables
 OAUTH_CLIENT_ID = os.environ.get('OAUTH_CLIENT_ID')
 OAUTH_CLIENT_SECRET = os.environ.get('OAUTH_CLIENT_SECRET')
+REDIRECT_URI = os.environ.get('REDIRECT_URI')
 
 DJANGO_SETTINGS_MODULE = os.environ.get("DJANGO_SETTINGS_MODULE", "lets_see.settings")
 
@@ -125,7 +126,7 @@ TEMPLATES = [
     },
 ]
 
-WSGI_APPLICATION = 'lets_see.wsgi.application'
+# WSGI_APPLICATION = 'lets_see.wsgi.application'
 ASGI_APPLICATION = "lets_see.asgi.application"
 
 # Database







diff --git a/lets_see/media/default.png b/lets_see/media/default.png
index 782097d..82c978d 100644
Binary files a/lets_see/media/default.png and b/lets_see/media/default.png differ







diff --git a/lets_see/run_dev.sh b/lets_see/run_dev.sh
index f2a174b..e89bfd1 100644
--- a/lets_see/run_dev.sh
+++ b/lets_see/run_dev.sh
@@ -13,6 +13,7 @@ python3 manage.py migrate
 
 # echo 'yes' | python3 manage.py collectstatic
 
-python3 manage.py runserver 0.0.0.0:8000
+daphne -b 0.0.0.0 -p 8000 lets_see.asgi:application
+# python3 manage.py runserver 0.0.0.0:8000
 
 







diff --git a/lets_see/templates/base.html b/lets_see/templates/base.html
index d0895df..ac5e332 100644
--- a/lets_see/templates/base.html
+++ b/lets_see/templates/base.html
@@ -148,6 +148,18 @@
 					showMessage(0);
 				{% endif %}
 			});
+
+			const ws_sheme = window.location.protocol === "https:" ? "wss" : "ws";
+			const socket = new WebSocket(ws_sheme + '://' + window.location.host + '/ws/status/');
+
+			socket.onopen = function(e) {
+				console.log("WebSocket connected");
+			}
+		
+			socket.onclose = function(e) {
+				console.log("WebSocket disconnected");
+			}
+
 		</script>
 	</body>
 </html>
\ No newline at end of file







diff --git a/lets_see/users/consumers.py b/lets_see/users/consumers.py
index 252a79f..fc8319d 100644
--- a/lets_see/users/consumers.py
+++ b/lets_see/users/consumers.py
@@ -1,12 +1,24 @@
 from channels.generic.websocket import AsyncWebsocketConsumer
+from channels.db import database_sync_to_async
 import json
+# import logging ####
+# logger = logging.getLogger(__name__) ####
 
 class OnlineStatusConsumer(AsyncWebsocketConsumer):
-    async def connect(self):
+	async def connect(self):
+		# logger.info(f"WS CONNECT ATTEMPT ON : {self.scope['user']}") ####
+		if self.scope["user"].is_authenticated:
+			# logger.info(f"{self.scope['user']} connected") ####
+			await self.set_online(True)
 		await self.accept()
-		self.scope["user"].online_status = True
-		await self.scope["user"].save()
-  
+
 	async def disconnect(self, close_code):
-		self.scope["user"].online_status = False
-		await self.scope["user"].save()
\ No newline at end of file
+		if self.scope["user"].is_authenticated:
+			await self.set_online(False)
+
+	@database_sync_to_async
+	def set_online(self, status):
+		user = self.scope["user"]
+		if user.is_authenticated:
+			user.online_status = status
+			user.save()
\ No newline at end of file







diff --git a/lets_see/users/routing.py b/lets_see/users/routing.py
index 8d2adce..b537cd0 100644
--- a/lets_see/users/routing.py
+++ b/lets_see/users/routing.py
@@ -2,5 +2,5 @@ from django.urls import path
 from .consumers import OnlineStatusConsumer
 
 websocket_urlpatterns = [
-	path('ws/status', OnlineStatusConsumer.as_asgi()),
+	path("ws/status/", OnlineStatusConsumer.as_asgi()),
 ]
\ No newline at end of file







diff --git a/lets_see/users/templates/users/profile.html b/lets_see/users/templates/users/profile.html
index 905a5cf..aa6d33b 100644
--- a/lets_see/users/templates/users/profile.html
+++ b/lets_see/users/templates/users/profile.html
@@ -5,6 +5,17 @@
 	{{ user.username }}
 </h1>
 <img src="{{ user.avatar.url }}" alt="Avatar" width="256" height="256">
+
+<!-- Ancienne version de Mateo (n'inclut pas les photos de l'intra) -->
+<!-- <img src="{{ user.avatar }}" alt="Avatar" style="width:100px; height:100px; border-radius: 50%;"> -->
+
+<!-- Ancienne version de Ines (fonctionnelle mais pas propre) -->
+<!-- {% if user.avatar %}
+  <img src="{{ user.avatar }}" alt="Avatar" style="width:100px; height:100px; border-radius: 50%;">
+{% else %}
+  <img src="/media/default.png" alt="Default Avatar" style="width:100px; height:100px; border-radius: 50%;">
+{% endif %} -->
+
 <p>
 	Wins : {{ user.wins }} | Losses : {{ user.losses }}
 </p>
@@ -28,5 +39,17 @@
 	<a href="{% url 'remove_friend' user.username %}">
 		Remove Friend
 	</a>
+	<hr>
+	<div>
+		{% if user.online_status %}
+			<span style="color:green">
+				Online
+			</span>
+		{% else %}
+			<span style="color:red">
+				Offline
+			</span>
+		{% endif %}
+	</div>
 {% endif %}
 {% endblock %}







diff --git a/lets_see/users/templates/users/profile_update.html b/lets_see/users/templates/users/profile_update.html
index b95d4b6..6906a4a 100644
--- a/lets_see/users/templates/users/profile_update.html
+++ b/lets_see/users/templates/users/profile_update.html
@@ -1,9 +1,10 @@
 {% extends "base.html" %}
 
 {% block content %}
-<form method="post" enctype="multipart/form-data">
+<form method="post">
 	{% csrf_token %}
-	{{ form.as_p }}
+	<!-- {{ form.as_p }} -->
+	{{ form }}
 	<!-- <img src="{{ user.avatar.url }}" width="100" height="100" alt="Avatar"> -->
 	<!-- Curent avatar -->
 	<!-- <hr> -->







diff --git a/lets_see/users/views.py b/lets_see/users/views.py
index e427b87..0e5f186 100644
--- a/lets_see/users/views.py
+++ b/lets_see/users/views.py
@@ -8,13 +8,17 @@ from django.contrib import messages
 
 @login_required
 def profile_update(request):
+	print("profile_update")
 	if request.method == 'POST':
+		print("DANS IF >>>>>>>>>>>>>")
 		form = UserProfileForm(request.POST, request.FILES, instance=request.user)
 		if form.is_valid():
+			print("In profile_update, form is valid")
 			form.save()
 			return redirect('my_profile')
 			# return redirect('user_profile', username=request.user.username)
 	else:
+		print("DANS ELSE >>>>>>>>>>>>>")
 		form = UserProfileForm(instance=request.user)
 	return render(request, 'users/profile_update.html', {'form': form})
 
@@ -39,7 +43,7 @@ def add_friend(request, username):
 @login_required
 def remove_friend(request, username):
 	if request.user.username == username:
-		message.error(request, "As you can not be friends with yourself, you can not unfriend yourself.", extra_tags='error')
+		messages.error(request, "As you can not be friends with yourself, you can not unfriend yourself.", extra_tags='error')
 		return (redirect('my_profile'))
 	if request.user.friends.filter(username=username).exists():
 		user_to_remove = get_object_or_404(CustomUser, username=username)
