"""
Django settings for lets_see project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os #for using the getenv function to get info from my .env
from datetime import timedelta #to set the date and time to europe paris
# from dotenv import load_dotenv
from distutils.util import strtobool

# load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-&h*xrf*kzy#d%!ft%&000ly1$7ov7ly6qd@9r*(weaog6l%zzc'
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY')

# Get environment variables
OAUTH_CLIENT_ID = os.environ.get('OAUTH_CLIENT_ID')
OAUTH_CLIENT_SECRET = os.environ.get('OAUTH_CLIENT_SECRET')
REDIRECT_URI = os.environ.get('REDIRECT_URI')

DJANGO_SETTINGS_MODULE = os.environ.get("DJANGO_SETTINGS_MODULE", "lets_see.settings")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# DEBUG = False

# ALLOWED_HOSTS = []
ALLOWED_HOSTS = os.environ.get("DJANGO_ALLOWED_HOSTS", "127.0.0.1").split(",")


# Application definition

INSTALLED_APPS = [
    # daphne
    "daphne",
    #websocket
    "channels",
    # default
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # allauth/users
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    # custom
    'users',
    'tournament',
    'fortytwo',
]

MIDDLEWARE = [
    # default
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # allauth
    'allauth.account.middleware.AccountMiddleware', #User Managment
]

AUTH_USER_MODEL = 'users.CustomUser'
# to use our user model define in the users folder

AUTHENTICATION_BACKENDS = [
    # default
    'django.contrib.auth.backends.ModelBackend',
    # allauth
    'allauth.account.auth_backends.AuthenticationBackend',
]
# to use allauth when authenticating users

LOGIN_REDIRECT_URL = '/'
LOGIN_URL = '/users/accounts/login/'

SITE_ID = 1
# allauth

# allauth settings
ACCOUNT_EMAIL_REQUIRED = False # no need of email for signing up
ACCOUNT_EMAIL_VERIFICATION = "none" # no way to ckeck email because no email
ACCOUNT_LOGIN_METHODS = "username" # use username to login
ACCOUNT_USERNAME_MIN_LENGHT = 5 # minimum lenght of username of 5
ACCOUNT_USERNAME_VALIDATORS = 'users.validators.custom_username_validdators' # custom way to check username, only ascii and @, ., +, -, _

ROOT_URLCONF = 'lets_see.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR/ "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'lets_see.context_processors.client_id_context',
                'lets_see.context_processors.uri_context',
            ],
        },
    },
]

# WSGI_APPLICATION = 'lets_see.wsgi.application'
ASGI_APPLICATION = "lets_see.asgi.application"

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# setup needeed to use postgrsql
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get("DATABASE_NAME"),
        'USER' : os.environ.get("DATABASE_USERNAME"),
        'PASSWORD' : os.environ.get("DATABASE_PASSWORD"),
        'HOST' : os.environ.get("DATABASE_HOST"),
        'PORT' : os.environ.get("DATABASE_PORT"),
        'TIME_ZONE' : 'Europe/Paris',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Paris'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

ACCOUNT_FORMS = {
    # 'add_email': 'allauth.account.forms.AddEmailForm',
    'change_password': 'allauth.account.forms.ChangePasswordForm',
    'confirm_login_code': 'allauth.account.forms.ConfirmLoginCodeForm',
    'login': 'allauth.account.forms.LoginForm',
    'request_login_code': 'allauth.account.forms.RequestLoginCodeForm',
    'reset_password': 'allauth.account.forms.ResetPasswordForm',
    'reset_password_from_key': 'allauth.account.forms.ResetPasswordKeyForm',
    'set_password': 'allauth.account.forms.SetPasswordForm',
    'signup': 'allauth.account.forms.SignupForm',
    'user_token': 'allauth.account.forms.UserTokenForm',
}

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels.layers.InMemoryChannelLayer", # in dev
        # "BACKEND": "channels_redis.core.RedisChannelLayer", #in prod
        # "CONFIG": { # in prod
            # "hosts": [("127.0.0.1", 6379)], # in prod
        # }, # in prod
    }
}

SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')