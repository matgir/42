COMMAND
	docker build -t <docker_name> .
		build a docker with the name <docker_name> using the Dockerfile in the current directory
	
	docker run -it <docker_name>
		starts the container and open a terminal inside it

	exit (inside a docker terminal)
		exits the docker

	docker rmi <image_id>
		delete the image designated by image id

	docker image
		show the list of all existing docker image, with their id

	docker ps -as
		show lists of all containers on the system, running or stopped

	docker stop <container_id>
		it stops the container affiliated to the <container_id>

	docker rm <container_id>
		it erased the container affiliated to the <container_id>

	docker-compose images
		show list of the images created with the current docker-compose.yml

	docker-compose stop
		this command stops the running containers of specified services

	docker-compose run <service_name>
		this is similar to the docker run command. It will create containers
		from images built for the <service_name> mentioned in the compose file

	docker-compose ps
		this command list all the containers in the current docker-compose file.
		They can then either be running or stopped.

WEBSITES
	How to remove docker images "CONSULTED"
		https://www.cherryservers.com/blog/how-to-remove-docker-images
	Getting stardockrted with Docker and Kubernetes: A beginners guide "CONSULTED"
		https://www.educative.io/blog/docker-kubernetes-beginners-guide
	Install Docker Engine on Debian "NOT"
		https://docs.docker.com/engine/install/debian/
	Docker Compose Tutorial: Advanced Docker made simple "CONSULTED"
		https://www.educative.io/blog/docker-compose-tutorial
	Docker Networking "CONSULTED"
		https://www.aquasec.com/cloud-native-academy/docker-container/docker-networking/
	 vbachele / Inception
		https://github.com/vbachele/Inception/tree/main
	 llescure / 42_Inception
		https://github.com/llescure/42_Inception
	Set environment variables within your containers environment
		https://docs.docker.com/compose/environment-variables/set-environment-variables/
	tblaase / inception
		https://github.com/tblaase/inception
	Forstman1 / inception-42 
		https://github.com/Forstman1/inception-42

TO KNOW
-	To erase a docker image if it is still linked to a container, you must stop
	the container, then delete it then erase your docker image
-	Dockerfile :	text document that contains the commands to call on the command
					line to build an image
-	Docker compose :	tool for defining and running multi-container docker
						applications. Information descirbing services and networks
						for an application are contained within a YAML file, called
						docker-compose.yml



/* - docker ps or docker ps -a //show the names of all the containers you have + the id you need and the port associated.
- docker pull "NameOfTheImage" // pull an image from dockerhub
- docker "Three first letter of your docker" // show the logs of your last run of dockers
- docker rm $(docker ps -a -q) //allow to delete all the opened images
- docker exec -it "Three first letter of your docker" sh // to execute the program with the shell

- docker run "name of the docker image" //to run the docker image
- docker run -d, // run container in background
- docker run -p,// publish a container's port to the host
- docker run -P, // publish all exposed port to random ports
- docker run -it "imageName", //le programme continuera de fonctionner et on pourra interagir avec le container
- docker run -name sl mysql, //give a name for the container instead an ID
- docker run -d -p 7000:80 test:latest

- docker image rm -f "image name/id", //delete the image, if the image is running you need to kill it first.
- docker image kill "name", //stop a running image,

- docker-compose up -d --build, //Create and build all the containers and they still run in the background
- docker-compose ps, //Check the status for all the containers
- docker-compose logs -f --tail 5, //see the first 5 lines of the logs of your containers
- docker-compose stop , //stop a stack of your docker compose
- Docker-compose down, //destroy all your ressources
- docker-compose config, //check the syntax of you docker-compose file

mysql -uroot // To connect on mysql CLI
SELECT User FROM mysql.user; // To see all the users
USE wordpress // To connect on your wordpress database
mysqldump -u username -p databasename > filename.sql // To export the file
mysql -uroot -p$MYSQL_ROOT_PASSWORD $MYSQL_DATABASE < /usr/local/bin/wordpress.sql // To import the file

SHOW DATABASES; // show the databes
use 'wordpress'; // go in the wordpress databse
SHOW TABLES; // show all the tables from the database you selected
SELECT wp_users.display_name FROM wp_users; // display username from wordpress database
SELECT *  FROM wp_users; // select */